version: "3.5"

networks:
  proxy:
    name: ${PROXY_NETWORK_NAME}
    external: true
  internal:

volumes:
  nextcloud:
  sql:

services:
  nextcloud:
    image: nextcloud:20
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - ./entrypoint-with-init.sh:/entrypoint-with-init.sh
      - ./custom-mounts.json:/opt/nextcloud/custom-mounts.json
    entrypoint: /entrypoint-with-init.sh
    command: apache2-foreground
    labels:
      # Enable access.
      - "traefik.enable=true"

      # Route all requests to DOMAIN_NAME to this service.
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${DOMAIN_NAME}`)"

      # Enable Let's Encrypt.
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"

      # Enable port 80.
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"

      # Add redirect middleware for carddav/caldav.
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}replace.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}replace.redirectregex.replacement=https://$$1/remote.php/dav/"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}replace.redirectregex.permanent=true"

      # Enable secure headers and redirect.
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=secureheader,${COMPOSE_PROJECT_NAME}replace"

      # Enable watchtower.
      - "com.centurylinklabs.watchtower.scope=${COMPOSE_PROJECT_NAME}"

    networks:
      - proxy
      - internal
    depends_on:
      - db
      - smtp
      - redis
    env_file:
      - .env
    environment:
      # SQL setup.
      MYSQL_USER: root
      MYSQL_HOST: db:${MYSQL_PORT}

      # SMTP setup.
      SMTP_HOST: smtp

      # Redis setup.
      REDIS_HOST: redis

      # Proxy setup.
      OVERWRITEHOST: ${DOMAIN_NAME}

  db:
    image: mariadb:10
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE:
      MYSQL_ROOT_HOST: "%"
    restart: always
    volumes:
      - sql:/var/lib/mysql
    networks:
      - internal
    labels:
      - "com.centurylinklabs.watchtower.scope=${COMPOSE_PROJECT_NAME}"

  smtp:
    image: namshi/smtp
    restart: always
    networks:
      - internal
    labels:
      - "com.centurylinklabs.watchtower.scope=${COMPOSE_PROJECT_NAME}"

  redis:
    image: redis:alpine
    restart: always
    networks:
      - internal
    labels:
      - "com.centurylinklabs.watchtower.scope=${COMPOSE_PROJECT_NAME}"

  cron:
    image: nextcloud:20
    restart: always
    volumes:
      - nextcloud:/var/www/html
    entrypoint: /cron.sh
    networks:
      - internal
    depends_on:
      - db
    labels:
      - "com.centurylinklabs.watchtower.scope=${COMPOSE_PROJECT_NAME}"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --scope ${COMPOSE_PROJECT_NAME}
    labels:
      - "com.centurylinklabs.watchtower.scope=${COMPOSE_PROJECT_NAME}"
